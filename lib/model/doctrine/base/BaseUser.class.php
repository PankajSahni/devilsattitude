<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('User', 'doctrine');

/**
 * BaseUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $user_id
 * @property string $name
 * @property string $email
 * @property string $pass
 * @property string $mobile
 * @property string $address
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property Doctrine_Collection $MyDesign
 * @property Doctrine_Collection $Orders
 * 
 * @method integer             getUserId()     Returns the current record's "user_id" value
 * @method string              getName()       Returns the current record's "name" value
 * @method string              getEmail()      Returns the current record's "email" value
 * @method string              getPass()       Returns the current record's "pass" value
 * @method string              getMobile()     Returns the current record's "mobile" value
 * @method string              getAddress()    Returns the current record's "address" value
 * @method timestamp           getCreatedAt()  Returns the current record's "created_at" value
 * @method timestamp           getUpdatedAt()  Returns the current record's "updated_at" value
 * @method Doctrine_Collection getMyDesign()   Returns the current record's "MyDesign" collection
 * @method Doctrine_Collection getOrders()     Returns the current record's "Orders" collection
 * @method User                setUserId()     Sets the current record's "user_id" value
 * @method User                setName()       Sets the current record's "name" value
 * @method User                setEmail()      Sets the current record's "email" value
 * @method User                setPass()       Sets the current record's "pass" value
 * @method User                setMobile()     Sets the current record's "mobile" value
 * @method User                setAddress()    Sets the current record's "address" value
 * @method User                setCreatedAt()  Sets the current record's "created_at" value
 * @method User                setUpdatedAt()  Sets the current record's "updated_at" value
 * @method User                setMyDesign()   Sets the current record's "MyDesign" collection
 * @method User                setOrders()     Sets the current record's "Orders" collection
 * 
 * @package    devil
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUser extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('user');
        $this->hasColumn('user_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('name', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('email', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('pass', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('mobile', 'string', 13, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 13,
             ));
        $this->hasColumn('address', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('MyDesign', array(
             'local' => 'user_id',
             'foreign' => 'user_id'));

        $this->hasMany('Orders', array(
             'local' => 'user_id',
             'foreign' => 'user_id'));
    }
}