<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Products', 'doctrine');

/**
 * BaseProducts
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $product_id
 * @property integer $category_id
 * @property string $name
 * @property string $image
 * @property integer $price
 * @property string $description
 * @property integer $order_number
 * @property integer $featured
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property Categories $Categories
 * 
 * @method integer    getProductId()    Returns the current record's "product_id" value
 * @method integer    getCategoryId()   Returns the current record's "category_id" value
 * @method string     getName()         Returns the current record's "name" value
 * @method string     getImage()        Returns the current record's "image" value
 * @method integer    getPrice()        Returns the current record's "price" value
 * @method string     getDescription()  Returns the current record's "description" value
 * @method integer    getOrderNumber()  Returns the current record's "order_number" value
 * @method integer    getFeatured()     Returns the current record's "featured" value
 * @method timestamp  getCreatedAt()    Returns the current record's "created_at" value
 * @method timestamp  getUpdatedAt()    Returns the current record's "updated_at" value
 * @method Categories getCategories()   Returns the current record's "Categories" value
 * @method Products   setProductId()    Sets the current record's "product_id" value
 * @method Products   setCategoryId()   Sets the current record's "category_id" value
 * @method Products   setName()         Sets the current record's "name" value
 * @method Products   setImage()        Sets the current record's "image" value
 * @method Products   setPrice()        Sets the current record's "price" value
 * @method Products   setDescription()  Sets the current record's "description" value
 * @method Products   setOrderNumber()  Sets the current record's "order_number" value
 * @method Products   setFeatured()     Sets the current record's "featured" value
 * @method Products   setCreatedAt()    Sets the current record's "created_at" value
 * @method Products   setUpdatedAt()    Sets the current record's "updated_at" value
 * @method Products   setCategories()   Sets the current record's "Categories" value
 * 
 * @package    devil
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProducts extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('products');
        $this->hasColumn('product_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('category_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('name', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('image', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('price', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('description', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('order_number', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('featured', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Categories', array(
             'local' => 'category_id',
             'foreign' => 'category_id'));
    }
}