<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Orders', 'doctrine');

/**
 * BaseOrders
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $order_id
 * @property integer $order_sessions_id
 * @property integer $user_id
 * @property integer $status
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property User $User
 * @property OrderSessions $OrderSessions
 * 
 * @method integer       getOrderId()           Returns the current record's "order_id" value
 * @method integer       getOrderSessionsId()   Returns the current record's "order_sessions_id" value
 * @method integer       getUserId()            Returns the current record's "user_id" value
 * @method integer       getStatus()            Returns the current record's "status" value
 * @method timestamp     getCreatedAt()         Returns the current record's "created_at" value
 * @method timestamp     getUpdatedAt()         Returns the current record's "updated_at" value
 * @method User          getUser()              Returns the current record's "User" value
 * @method OrderSessions getOrderSessions()     Returns the current record's "OrderSessions" value
 * @method Orders        setOrderId()           Sets the current record's "order_id" value
 * @method Orders        setOrderSessionsId()   Sets the current record's "order_sessions_id" value
 * @method Orders        setUserId()            Sets the current record's "user_id" value
 * @method Orders        setStatus()            Sets the current record's "status" value
 * @method Orders        setCreatedAt()         Sets the current record's "created_at" value
 * @method Orders        setUpdatedAt()         Sets the current record's "updated_at" value
 * @method Orders        setUser()              Sets the current record's "User" value
 * @method Orders        setOrderSessions()     Sets the current record's "OrderSessions" value
 * 
 * @package    devil
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseOrders extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('orders');
        $this->hasColumn('order_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('order_sessions_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('user_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('status', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('User', array(
             'local' => 'user_id',
             'foreign' => 'user_id'));

        $this->hasOne('OrderSessions', array(
             'local' => 'order_sessions_id',
             'foreign' => 'id'));
    }
}